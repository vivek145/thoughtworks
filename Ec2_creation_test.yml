
---

- hosts: localhost
  tasks:
    - name: Get my current IP address
      uri:
        url: http://checkip.amazonaws.com/
        return_content: yes
      register: my_ip

    - name: Setting up Security/Firewall Group
      ec2_group:
         name: Test_Security_Grp
         description: Rules Allowing Traffic
         region: us-west-2
         rules:
          - proto: tcp
            from_port: 0
            to_port: 65535
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
         rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0


    - name: Create a new EC2 key
      ec2_key:
           name: test-key
           region: us-west-2
      register: ec2_key_result
 
    - name: Save private key
      copy: content="{{ ec2_key_result.key.private_key }}" dest="./aws.test.pem" mode=0600
      when: ec2_key_result.changed

    - name: Provision a EC2 Instance
      ec2:
         key_name: test-key
         region: us-west-2
         instance_type: t2.micro
         image: ami-00f7c900d2e7133e1
         wait: yes
         wait_timeout: 500
         count: 2
         instance_tags:
           Name: TWTest_Server
           owner: Devops
         monitoring: no
         vpc_subnet_id: subnet-b997a5e3 #change the subnet id
         assign_public_ip: yes
         group: Test_AWS_Security_Grp
      register: ec2


    - name: Add the newly created EC2 instance(s) to the local host group (located inside the directory)
      local_action: lineinfile
                  dest="/etc/ansible/hosts"
                  regexp={{ item.public_ip }}
                  insertafter="[prod-servers]" line="{{ item.public_ip }} ansible_ssh_user=centos ansible_ssh_private_key_file=./aws.test.pem"
      with_items: '{{ec2.instances}}'

   
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=320 state=started
      with_items: '{{ec2.instances}}'

